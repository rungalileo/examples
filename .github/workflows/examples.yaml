name: examples

on:
  schedule:
    # At 05:00 UTC on every day-of-week from Monday through Friday.
    - cron: "0 5 * * 1-5"
  push:
    branches:
      - sc-4717

env:
  MINIMIZE_FOR_CI: "false"
  GALILEO_USERNAME: ${{ secrets.GALILEO_USERNAME }}
  GALILEO_PASSWORD: ${{ secrets.GALILEO_PASSWORD }}

jobs:
  mltc-example:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        python-version: ["3.8"]
      fail-fast: false

    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: set up python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: "requirements-ci.txt"

      - name: install dependencies
        run: pip install -r requirements-ci.txt

      - name: run notebook
        run: jupyter nbconvert --debug --to notebook --execute examples/multi_label_text_classification/Multi_Label_Text_Classification_using_Pytorch_and_ðŸ”­_Galileo.ipynb

  ner-example:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        python-version: ["3.8"]
      fail-fast: false

    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: set up python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: "requirements-ci.txt"

      - name: install dependencies
        run: pip install -r requirements-ci.txt

      - name: run notebook
        run: jupyter nbconvert --to notebook --execute examples/named_entity_recognition/Named_Entity_Recognition_with_Pytorch_and_ðŸ”­_Galileo.ipynb

  nli-example:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        python-version: ["3.8"]
      fail-fast: false

    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: set up python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: "requirements-ci.txt"

      - name: install dependencies
        run: pip install -r requirements-ci.txt

      - name: run notebook
        run: jupyter nbconvert --to notebook --execute examples/natural_language_inference/Natural_Language_Inference_using_Pytorch_and_ðŸ”­_Galileo.ipynb

  tc-example:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        python-version: ["3.8"]
      fail-fast: false

    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: set up python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: "requirements-ci.txt"

      - name: install dependencies
        run: pip install -r requirements-ci.txt

      - name: run notebook
        run: jupyter nbconvert --to notebook --execute examples/text_classification/Text_Classification_using_PyTorch_and_ðŸ”­_Galileo.ipynb

  ic-example:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]
      fail-fast: false

    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: set up python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: "requirements-ci.txt"

      - name: install dependencies
        run: pip install -r requirements-ci.txt

      - name: run notebook
        run: jupyter nbconvert --debug --to notebook --execute examples/image_classification/Image_Classification_using_PyTorch_and_ðŸ”­_Galileo.ipynb

  send-slack-notification:
    runs-on: ubuntu-latest
    needs: [mltc-example, ner-example, nli-example, tc-example, ic-example]
    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: construct footer url
        id: footer_url
        run: |
          SLACK_FOOTER_URL="${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}"
          echo "slack_footer_url=${SLACK_FOOTER_URL}" >> $GITHUB_OUTPUT

      - name: report status to slack
        if: always()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.ML_TEAM_EXAMPLES_WEBHOOK }}
          SLACK_USERNAME: "Example Runs Root Content Populator"
          SLACK_ICON_EMOJI: ":telescope:"
          SLACK_COLOR: ${{ ((needs.mltc-example.result == 'success') && (needs.ner-example.result == 'success') && (needs.nli-example.result == 'success') && (needs.tc-example.result == 'success') && (needs.ic-example.result == 'success') && 'success') || 'failure' }}
          SLACK_TITLE: "Example Runs Root Content Populator"
          SLACK_MESSAGE: "Click the link in the footer to investigate any broken example notebooks."
          SLACK_FOOTER: ${{ steps.footer_url.outputs.slack_footer_url }}
